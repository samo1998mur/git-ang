{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/core\";\n\nfunction QuestionsComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class QuestionsComponent {\n  constructor() {\n    this.myControl = new FormControl('');\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), Map(value => this._filter(value || '')));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)();\n};\n\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(7, QuestionsComponent_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 3, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i2.MatLabel, i3.MatInput, i1.DefaultValueAccessor, i4.MatAutocompleteTrigger, i1.NgControlStatus, i1.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\".example-form[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJmaWxlIjoicXVlc3Rpb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9Il19 */\"]\n});\n\nfunction startWith(arg0) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"sources":["/home/samo/samvel-muradyan/src/app/component/questions/questions.component.ts"],"names":["FormControl","i0","i1","i2","i3","i4","i5","i6","QuestionsComponent_mat_option_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","option_r2","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","QuestionsComponent","constructor","myControl","options","ngOnInit","filteredOptions","valueChanges","pipe","startWith","Map","value","_filter","filterValue","toLowerCase","filter","option","includes","ɵfac","QuestionsComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","QuestionsComponent_Template","ɵɵelement","ɵɵtemplate","ɵɵpipe","_r0","ɵɵreference","ɵɵpipeBind1","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","MatFormField","MatLabel","MatInput","DefaultValueAccessor","MatAutocompleteTrigger","NgControlStatus","FormControlDirective","MatAutocomplete","NgForOf","MatOption","pipes","AsyncPipe","styles","arg0","Error"],"mappings":"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","sourcesContent":["import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/core\";\nfunction QuestionsComponent_mat_option_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n} }\nexport class QuestionsComponent {\n    constructor() {\n        this.myControl = new FormControl('');\n        this.options = ['One', 'Two', 'Three'];\n    }\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), Map(value => this._filter(value || '')));\n    }\n    _filter(value) {\n        const filterValue = value.toLowerCase();\n        return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) { return new (t || QuestionsComponent)(); };\nQuestionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: QuestionsComponent, selectors: [[\"app-questions\"]], decls: 9, vars: 5, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function QuestionsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n        i0.ɵɵtemplate(7, QuestionsComponent_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 3, ctx.filteredOptions));\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i2.MatLabel, i3.MatInput, i1.DefaultValueAccessor, i4.MatAutocompleteTrigger, i1.NgControlStatus, i1.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatOption], pipes: [i5.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJmaWxlIjoicXVlc3Rpb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9Il19 */\"] });\nfunction startWith(arg0) {\n    throw new Error('Function not implemented.');\n}\n"]},"metadata":{},"sourceType":"module"}